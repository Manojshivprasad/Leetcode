# C++

class Solution {
public:
    int check(vector<int> arr,int max,int k){
        int c = 0;
        for(auto val : arr){
            c += (val + max - 1) / max;
        }
        return c > k;
    }
    int minEatingSpeed(vector<int>& piles, int h){
        int start = 1;
        int end = *max_element(piles.begin(), piles.end());
        while (start < end){
            int mid = start + (end - start) / 2;
            if (check(piles,mid,h)){
                start = mid + 1;
            }
            else{
                end = mid;
            }
        }
        return start;
    }
};
