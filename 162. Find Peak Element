# Python 3

Solution 1
class Solution:
    def findPeakElement(self, nums: List[int]) -> int:
        start = 0
        end = len(nums) - 1
        if len(nums) == 1:
            return 0
        while start <= end:
            mid = start + (end - start) // 2
            if mid > 0 and mid < len(nums) - 1:
                if nums[mid-1] < nums[mid] > nums[mid+1]:
                    return mid
                elif nums[mid] < nums[mid-1]:
                    end = mid - 1
                else:
                    start = mid + 1
            elif mid == 0:
                if nums[mid+1] > nums[mid]:
                    return mid + 1
                else:
                    return mid
            elif mid == len(nums) - 1:
                if nums[mid] < nums[mid - 1]:
                    return mid - 1
                else:
                    return mid
____________________________________________________________________________
TIME COMPLEXITY - O(log n)
____________________________________________________________________________

Solution 2
class Solution:
    def findPeakElement(self, nums: List[int]) -> int:
        return nums.index(max(nums))
____________________________________________________________________________
TIME COMPLEXITY - O(n^2)
____________________________________________________________________________
