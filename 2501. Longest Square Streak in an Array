# Python 3

# First Solution (High run time)
class Solution:
    def longestSquareStreak(self, nums: List[int]) -> int:
        nums.sort()
        nums_set = set(nums)
        result = []

        while nums:
            x = nums.pop(0)
            if x not in nums_set:
                continue
            nums_set.remove(x)
            l1 = [x]

            while l1[-1] ** 2 in nums_set:
                y = l1[-1] ** 2
                nums_set.remove(y)
                l1.append(y)

            if len(l1) > 1:
                result.append(l1)

        if len(result) == 0:
            return -1
        else:
            return(len(max(result, key=len)))

# Second Solution (Low run time)
class Solution:
    def longestSquareStreak(self, nums: List[int]) -> int:
        nums.sort()
        nums_set = set(nums)
        m = 0

        for i in nums:
            l = 0
            while i in nums_set:
                l += 1
                i = i ** 2
            if l > 1:
                m = max(l,m)

        if m > 1:
            return(m)
        else:
            return(-1)
