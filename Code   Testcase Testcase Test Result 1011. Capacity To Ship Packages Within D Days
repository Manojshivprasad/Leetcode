# C++

class Solution {
public:
    bool check(vector<int> arr, int max_val,int days){
        int val = 0;
        int c = 0;
        int i = 0;
        while (i < arr.size()){
            if (val + arr[i] > max_val){
                c += 1;
                val = 0;
            }
            val+= arr[i];
            i++;
        }
        return (c<days);
    }

    int shipWithinDays(vector<int>& weights, int days) {
        int start = *max_element(weights.begin(), weights.end());
        int end = accumulate(weights.begin(), weights.end(), 0);
        while (start < end){
            int mid = start + (end - start) / 2;
            if (check(weights,mid,days)){
                end = mid;
            }
            else{
                start = mid + 1;
            }
        }
        return start;
    }
};
