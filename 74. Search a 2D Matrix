# Python 3

class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        l1 = [j for i in matrix for j in i]
        if target in l1:
            return True
        else:
            return False
__________________________________________________________________________
TIME COMPLEXITY - O(n*m)
__________________________________________________________________________

# Binary Search
class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        i = 0
        j = len(matrix[0]) - 1
        while i >= 0 and i < len(matrix) and j >= 0 and j < len(matrix[0]):
            if matrix[i][j] == target:
                return True
            elif matrix[i][j] > target:
                j -= 1
            elif matrix[i][j] < target:
                i += 1
        return False
__________________________________________________________________________
TIME COMPLEXITY - O(log(n))
__________________________________________________________________________
