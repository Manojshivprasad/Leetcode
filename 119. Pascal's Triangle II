# Python 3

class Solution:
    def getRow(self, rowIndex: int) -> List[int]:
        result = [[1],[1,1]]
        l1 = [1,1]
        for j in range(rowIndex-1):
            l2 = []
            for i in range(1,len(l1)):
                val = l1[i-1] + l1[i]
                l2.append(val)
            l2.insert(0,1)
            l2.append(1)
            result.append(l2)
            l1 = l2
        return(result[rowIndex])
_________________________________________________________________
l1[i-1] + l1[i] adds the adjecent numbers and append in l2
1 is added in l2 in first and last postion and appended to result
l1 stores l2 to perform the next additions
_________________________________________________________________

# C++

class Solution {
public:
    vector<int> getRow(int rowIndex) {
        vector<vector<int>> result{{1},{1,1}};
        vector<int> l1{1,1};
        for (int i = 0; i < rowIndex-1; i++){
            vector<int> l2;
            for (int j = 1; j < l1.size(); j++){
                int val = l1[j-1] + l1[j];
                l2.push_back(val);
            }
            l2.insert(l2.begin(), 1);
            l2.push_back(1);
            result.push_back(l2);
            l1 = l2;
        }
        return result[rowIndex];
    }
};
